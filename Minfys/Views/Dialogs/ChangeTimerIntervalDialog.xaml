<Window x:Class="Minfys.Views.Dialogs.ChangeTimerIntervalDialog"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:dialogs="clr-namespace:Minfys.ViewModels.Dialogs"
        d:DataContext="{d:DesignInstance Type=dialogs:ChangeTimerIntervalDialogViewModel, IsDesignTimeCreatable=True}"
        mc:Ignorable="d"
        Title="ChangeTimerIntervalWindow"
        Width="260"
        Height="110"
        WindowStartupLocation="CenterOwner"
        WindowStyle="None"
        ResizeMode="NoResize"
        ShowInTaskbar="False"
        AllowsTransparency="True"
        Background="Transparent"
        Style="{StaticResource MaterialDesignWindow}"
        FocusManager.FocusedElement="{Binding ElementName=NewTimerIntervalMaskedTextBox}">

    <Window.Resources>
        <Style x:Key="ModernTextBox" TargetType="xctk:MaskedTextBox">
            <Setter Property="FontSize" Value="18" />
            <Setter Property="FontWeight" Value="Medium" />
            <Setter Property="Padding" Value="4,4" />
            <Setter Property="Background" Value="#f8f9fa" />
            <Setter Property="BorderBrush" Value="#dee2e6" />
            <Setter Property="BorderThickness" Value="2" />
            <Setter Property="Foreground" Value="#212529" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="xctk:MaskedTextBox">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="8">
                            <ScrollViewer x:Name="PART_ContentHost"
                                          Margin="{TemplateBinding Padding}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter Property="BorderBrush" Value="MediumPurple" />
                                <Setter Property="Background" Value="White" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" Value="#6c757d" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <Window.RenderTransform>
        <ScaleTransform x:Name="ScaleTransform" ScaleX="1" ScaleY="1" />
    </Window.RenderTransform>
    <Window.RenderTransformOrigin>0.5,0.5</Window.RenderTransformOrigin>

    <Window.Triggers>
        <EventTrigger RoutedEvent="Window.Loaded">
            <BeginStoryboard>
                <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="ScaleTransform"
                                     Storyboard.TargetProperty="ScaleX"
                                     From="0.5" To="1" Duration="0:0:0.1" />
                    <DoubleAnimation Storyboard.TargetName="ScaleTransform"
                                     Storyboard.TargetProperty="ScaleY"
                                     From="0.5" To="1" Duration="0:0:0.1" />
                    <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                     From="0" To="1" Duration="0:0:0.1" />
                </Storyboard>
            </BeginStoryboard>
        </EventTrigger>
    </Window.Triggers>

    <Border
        Background="{DynamicResource MaterialDesignPaper}"
        BorderBrush="MediumPurple"
        BorderThickness="2"
        CornerRadius="8"
        UseLayoutRounding="True">

        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition />
            </Grid.RowDefinitions>

            <StackPanel Grid.Column="0"
                        Grid.Row="0"
                        Grid.ColumnSpan="3"
                        Orientation="Horizontal">
                <TextBlock Text="Enter new value:"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center"
                           Margin="5"
                           FontSize="20" />
                <xctk:MaskedTextBox Name="NewTimerIntervalMaskedTextBox"
                                    Style="{StaticResource ModernTextBox}"
                                    Mask="00:00:00"
                                    FontSize="20"
                                    Margin="5, 5, 5, 0"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    PromptChar="0" />
            </StackPanel>

            <StackPanel Grid.Column="0" Grid.ColumnSpan="3" Grid.Row="1"
                        Orientation="Horizontal"
                        Margin="5"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center">
                <Button Content="Accept"
                        Background="MediumPurple" BorderBrush="MediumPurple"
                        Margin="5" FontSize="15"
                        Command="{Binding AcceptChangeCommand}"
                        CommandParameter="{Binding Text, ElementName=NewTimerIntervalMaskedTextBox}" />
                <Button Content="Cancel" Margin="5" FontSize="15"
                        Command="{Binding CancelChangeCommand}" />
            </StackPanel>

        </Grid>
    </Border>
</Window>